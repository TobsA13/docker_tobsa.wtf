version: "3.9"

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  mariadb:
  npm_data:
  npm_letsencrypt:
  ts3data:
  changedetection-data:
  healthchecks-data:
  hedgedoc-data:

services:
  db:
    container_name: db
    image: 'mariadb:10'
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - "mariadb:/var/lib/mysql"
      - "/etc/localtime:/etc/localtime:ro"

  phpmyadmin:
    container_name: phpmyadmin
    image: 'phpmyadmin:5'
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_VERBOSE=tobsa.wtf
#      - PMA_ABSOLUTE_URI=pma.tobsa.dev
    networks:
      - backend
    volumes:
      - "/etc/localtime:/etc/localtime:ro"

  npm:
    container_name: npm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port (accessible via NPM #loop):
      # - '81:81'
      # Add any other Stream port you want to expose
      - '1337:1337' # Teststreams
    environment:
      # These are the settings to access your db
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # If you would rather use Sqlite uncomment this
      # and remove all DB_MYSQL_* lines above
      # DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      #DISABLE_IPV6: 'true'
    networks:
      - backend
    volumes:
      - "npm_data:/data"
      - "npm_letsencrypt:/etc/letsencrypt"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - db

  web-public:
    container_name: web-public
    build:
      context: webserver-public/.
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - "/opt/www-public:/var/www/html/"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - db

  web-vpn:
    container_name: web-vpn
    build:
      context: webserver-vpn/.
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - "/opt/www-vpn:/var/www/html/"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - db

  teamspeak:
    container_name: teamspeak
    image: teamspeak
    restart: unless-stopped
    ports:
      - 39987-39988:39987-39988/udp
      - 10022:10022
      - 30033:30033
    environment:
      TS3SERVER_LICENSE: accept
      TS3SERVER_QUERY_PROTOCOLS: ssh
    networks:
      - backend
    volumes:
      - "ts3data:/var/ts3server"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - db

  ts-manager:
    container_name: ts-manager
    image: "joni1802/ts3-manager"
    restart: unless-stopped
    environment:
      - WHITELIST=teamspeak
    networks:
      - backend
    depends_on:
      - teamspeak
      
  changedetection:
    container_name: changedetection
    image: ghcr.io/dgtlmoon/changedetection.io
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - changedetection-data:/datastore
    environment:
      - USE_X_SETTINGS=1
      - BASE_URL=https://cd.tobsa.dev
    networks:
      - backend

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      WATCHTOWER_SCHEDULE: "0 0 6 * * *"
      WATCHTOWER_CLEANUP: "true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"

  healthchecks:
    container_name: healthchecks
    image: lscr.io/linuxserver/healthchecks
    restart: unless-stopped
    environment:
      - SITE_ROOT=https://hc.tobsa.dev
      - SITE_NAME=TobsA.WTF Healthcheck
      - ALLOWED_HOSTS=["hc.tobsa.dev"]
      - SUPERUSER_EMAIL=hc@tobsa.wtf
      - REGISTRATION_OPEN=False
      - DEBUG=False
      - REGENERATE_SETTINGS=True
    volumes:
      - healthchecks-data:/config
    networks:
      - backend

  hedgedoc:
    container_name: hedgedoc
    # Make sure to use the latest release from https://hedgedoc.org/latest-release
    image: quay.io/hedgedoc/hedgedoc:1.9.3
    restart: unless-stopped
    environment:
      - CMD_DB_URL=mysql://hedgedoc:hedgedoc@db:3306/hedgedoc
      - CMD_DOMAIN=pad.tobsa.wtf
      - CMD_URL_ADDPORT=false
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_DEFAULT_PERMISSION=private
      - CMD_EMAIL=false
      - CMD_ALLOW_EMAIL_REGISTER=False
      - CMD_OAUTH2_AUTHORIZATION_URL=https://cloud.tobsa.wtf/apps/oauth2/authorize
      - CMD_OAUTH2_TOKEN_URL=https://cloud.tobsa.wtf/apps/oauth2/api/v1/token
      - CMD_OAUTH2_USER_PROFILE_URL=https://cloud.tobsa.wtf/ocs/v2.php/cloud/user?format=json
      - CMD_OAUTH2_USER_PROFILE_USERNAME_ATTR=ocs.data.id
      - CMD_OAUTH2_USER_PROFILE_DISPLAY_NAME_ATTR=ocs.data.display-name
      - CMD_OAUTH2_USER_PROFILE_EMAIL_ATTR=ocs.data.email
      #Secrets in hedgedoc.env
    env_file:
      - hedgedoc.env
    volumes:
      - hedgedoc-data:/hedgedoc/public/uploads
    networks:
      - backend
    depends_on:
      - db
